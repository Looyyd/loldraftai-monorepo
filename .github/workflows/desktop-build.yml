name: Build Desktop App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    # Skip release creation for pull requests
    permissions:
      contents: write  # Needed for creating releases
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Check for changes
        id: check-changes
        run: |
          if npx turbo-ignore @draftking/desktop; then
            echo "should_build=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi


      - name: Install Wine
        if: steps.check-changes.outputs.should_build == 'true'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine64 wine32:i386

      - name: Build Desktop App
        if: steps.check-changes.outputs.should_build == 'true'
        run: yarn turbo run build --filter=@draftking/desktop...
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Install AWS CLI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.check-changes.outputs.should_build == 'true'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS CLI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.check-changes.outputs.should_build == 'true'
        run: |
          aws configure set aws_access_key_id ${{ secrets.R2_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.R2_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      - name: Upload to R2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.check-changes.outputs.should_build == 'true'
        run: |
          # Upload the .exe file
          aws s3 cp apps/desktop/dist/DraftKing.Setup.0.0.0.exe \
            s3://${{ secrets.R2_BUCKET_NAME }}/latest/DraftKing.Setup.exe \
            --endpoint-url https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com \
            --content-type application/octet-stream

          # Upload the blockmap file
          aws s3 cp apps/desktop/dist/DraftKing.Setup.0.0.0.exe.blockmap \
            s3://${{ secrets.R2_BUCKET_NAME }}/latest/DraftKing.Setup.exe.blockmap \
            --endpoint-url https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com \
            --content-type application/octet-stream
